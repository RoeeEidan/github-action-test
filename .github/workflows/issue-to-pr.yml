name: Issue to PR Workflow

on:
  issues:
    types:
      - opened

permissions:
  contents: write
  pull-requests: write

jobs:
  create-pr:
    if: contains(join(github.event.issue.labels.*.name, ','), 'ChatGPT:')
    runs-on: ubuntu-latest

    steps:
      - name: Comment Action Run Link on Issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const issueNumber = ${{ github.event.issue.number }};
            const runUrl = `${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `ðŸš€ The [GitHub Action Run](${runUrl}) for this issue is in progress, PR should be ready in 1 minute.`
            });

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install Dependencies
        run: yarn install

      - name: Run Build
        run: yarn build

      - name: Determine Label, Run Script, and Capture Handle
        id: get_label
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        shell: bash
        run: |
          set -e
          LABEL=$(echo "${{ join(github.event.issue.labels.*.name, ',') }}" | grep -oE 'ChatGPT:[^,]*' | head -n1 | cut -d':' -f2 || true)
          echo "LABEL=$LABEL" >> $GITHUB_ENV
          SAFE_TITLE=$(echo "${{ github.event.issue.title }}" | sed 's/\"/\\\"/g')
          SAFE_BODY=$(echo "${{ github.event.issue.body }}" | sed 's/\"/\\\"/g')
          CONTEXT="# $SAFE_TITLE\n\n$SAFE_BODY"
          echo "Running: yarn $LABEL with context"
          RESULT=$(yarn "$LABEL" "$CONTEXT")
          echo "$RESULT"
          HANDLE=$(echo "$RESULT" | grep 'HANDLE: ' | cut -d' ' -f2)
          IMAGE=$(echo "$RESULT" | grep 'IMAGE: ' | cut -d' ' -f2)
          echo "CONTENT_HANDLE=$HANDLE" >> $GITHUB_ENV
          echo "CONTENT_IMAGE=$IMAGE" >> $GITHUB_ENV
          echo "Generated content handle: $HANDLE"

      - name: Create and Switch to New Branch
        run: |
          BRANCH_NAME="chatgpt/${{ github.event.issue.number }}/${{ env.LABEL }}/${{ env.CONTENT_HANDLE }}"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          git checkout -b "$BRANCH_NAME"
          git add .
          git commit -m "Create AI content for issue #${{ github.event.issue.number }}"
          git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}.git "$BRANCH_NAME"

      - name: Create Pull Request with Label, Reviewer, and Comment Content Handle
        id: create_pr
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const issueNumber = ${{ github.event.issue.number }};
            const contentHandle = process.env.CONTENT_HANDLE || 'N/A';
            const image = process.env.CONTENT_IMAGE || 'N/A';
            const label = process.env.LABEL || 'content';
            const branchName = process.env.BRANCH_NAME;
            const pathnames = { lesson: 'climate-class-view', challenge: 'challenge' }
            const prTitle = `ChatGPT \`${label}\`: \`${contentHandle}\` for Issue #${issueNumber}`;
            const prBody = `Resolves #${issueNumber} _Created by ChatGPT_
            
            Generated \`${label}\` with handle: \`${contentHandle}\`
            [Generate Image](${image})
            
            ---

            **Links:**
            - [staging](https://staging.mammothclimate.io/en/${pathnames[label]}/${contentHandle}) - Available about 5 minutes after the PR was created
            - [production](https://www.mammothclimate.io/en/${pathnames[label]}/${contentHandle}) - Available after the PR is merged & released

            ---

            **Available comments:**
            Triggers a staging deployment with the latest changes in this PR
            \`\`\`bash
            stageit
            \`\`\`
            Uses ChatGPT to re generate the image in this PR
            \`\`\`bash
            regenerate image
            \`\`\`
            Uses ChatGPT to re translate the content in this PR
            \`\`\`bash
            retranslate
            \`\`\`
            `;

            const response = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: prTitle,
              head: branchName,
              base: 'main',
              body: prBody
            });
            console.log(`PR created: ${response.data.html_url}`);

            const issueLabels = ${{ toJson(github.event.issue.labels.*.name) }};
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: response.data.number,
              labels: issueLabels
            });

            const creator = '${{ github.event.issue.user.login }}';
            if (creator !== 'RoeeEidan') {
              await github.rest.pulls.requestReviewers({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: response.data.number,
                reviewers: [creator]
              });
              console.log(`${creator} assigned as reviewer.`);
            }

            // Add 'stageit' comment to PR
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: response.data.number,
              body: 'stageit'
            });
            console.log(`Comment to stageit added.`);
            return response.data.number;

      - name: Assign Issue Creator to PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const prNumber = ${{ steps.create_pr.outputs.result }};
            const creator = '${{ github.event.issue.user.login }}';
            await github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              assignees: [creator]
            });
            console.log(`Assignee added: ${creator}`);