name: Issue to PR Workflow

on:
  issues:
    types:
      - opened

permissions:
  contents: write
  pull-requests: write

jobs:
  create-pr:
    if: contains(join(github.event.issue.labels.*.name, ','), 'ChatGPT:')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install Dependencies
        run: yarn install

      - name: Run Build
        run: yarn build

      - name: Determine Label and Run Script
        id: get_label
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          LABEL=$(echo "${{ join(github.event.issue.labels.*.name, ',') }}" | grep -oE 'ChatGPT:[^,]*' | head -n1 | cut -d':' -f2)
          echo "LABEL=$LABEL" >> $GITHUB_ENV
          CONTEXT="# ${{ github.event.issue.title }}\n\n${{ github.event.issue.body }}"
          echo "Running: yarn $LABEL with context"
          yarn "$LABEL" -- "$CONTEXT"

      - name: Create and Switch to New Branch
        run: |
          BRANCH_NAME="chatgpt/${{ github.event.issue.number }}"
          git checkout -b $BRANCH_NAME
          git add .
          git commit -m "Create AI content for issue #${{ github.event.issue.number }}"
          git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}.git $BRANCH_NAME

      - name: Create Pull Request with Label and Reviewer
        id: create_pr
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const issueNumber = ${{ github.event.issue.number }};
            const issueTitle = "${{ github.event.issue.title }}";
            const label = process.env.LABEL || 'content';
            const prTitle = `ChatGPT: Create new ${label} -- ${issueTitle} (#${issueNumber})`;
            const prBody = `Resolves #${issueNumber}\n\nCreated by ChatGPT\n\nDeploy to staging by commenting 'stageit' on this PR.`;
            const response = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: prTitle,
              head: `chatgpt/${issueNumber}`,
              base: 'main',
              body: prBody
            });
            console.log(`PR created: ${response.data.html_url}`);

            // Add labels to the PR matching the issue's labels
            const issueLabels = ${{ toJson(github.event.issue.labels.*.name) }};
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: response.data.number,
              labels: issueLabels
            });

            // If issue creator is not RoeeEidan, assign the issue creator as reviewer
            const creator = '${{ github.event.issue.user.login }}';
            if (creator !== 'RoeeEidan') {
              await github.rest.pulls.requestReviewers({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: response.data.number,
                reviewers: [creator]
              });
              console.log(`${creator} assigned as reviewer.`);
            }

            return response.data.number;

      - name: Assign Issue Creator to PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const prNumber = ${{ steps.create_pr.outputs.result }};
            const creator = '${{ github.event.issue.user.login }}';
            await github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              assignees: [creator]
            });
            console.log(`Assignee added: ${creator}`);
